<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>

  <data name="Title00" type="System.String">
    <value>Вкладка "Поставщик" Web Site Administration Tool</value>
  </data>
  <data name="WebSiteAdministrationToolProviderTab01" type="System.String">
    <value>Вкладка "Поставщик" Web Site Administration Tool</value>
  </data>
  <data name="WebSiteAdministrationToolProviderTab02" type="System.String">
    <value>Вкладка &lt;span class=UI&gt;Поставщик&lt;/span&gt; средства Web Site Administration Tool позволяет управлять способом хранения данных для соответствующих функций, например, учетных записей, ролей и других параметров.</value>
  </data>
  <data name="Introduction01" type="System.String">
    <value>Вступление</value>
  </data>
  <data name="Introduction02" type="System.String">
    <value>ASP.NET использует классы поставщиков для управления хранением данных для различных функций, например управления членством и ролями. Класс поставщика — это компонент, который реализует некоторые функциональные возможности ASP.NET, например, управление пользовательскими учетными записями в членстве. Каждой из этих функций приложения требуется хранилище данных. Несмотря на то, что каждый класс поставщика служит для одних и тех же функций приложения, они могут хранить данные по-разному. Например, разные классы поставщиков для членства ASP.NET могут хранить сведения об учетных записях следующими способами:</value>
  </data>
  <data name="Introduction03" type="System.String">
    <value>В базе данных Microsoft SQL Server. </value>
  </data>
  <data name="Introduction04" type="System.String">
    <value>В службе каталогов Microsoft Windows Active Directory.</value>
  </data>
  <data name="Introduction05" type="System.String">
    <value>В собственной базе данных пользователя.</value>
  </data>
  <data name="Introduction06" type="System.String">
    <value>Каждый из классов поставщиков отвечает за один и тот же набор задач по управлению учетными записями пользователей, а взаимодействие с каждым классом поставщика в приложении организовано одинаково.</value>
  </data>
  <data name="ConfiguringProvidersintheWebSiteAdministrationTool01" type="System.String">
    <value>Настройка поставщиков при помощи Web Site Administration Tool</value>
  </data>
  <data name="ConfiguringProvidersintheWebSiteAdministrationTool02" type="System.String">
    <value>Средство Web Site Administration Tool позволяет использовать различные классы поставщиков для функций приложения, например членства и ролей. ASP.NET устанавливается с несколькими классами поставщиков для каждого типа функций приложения. Например, ASP.NET использует один класс поставщика для членства, который хранит информацию в базе данных SQL Server (&lt;span class=LanguageKeyword&gt;AspNetSqlMembershipProvider&lt;/span&gt;) и другой класс, который хранит информацию о членстве в Active Directory.</value>
  </data>
  <data name="ManagingProviderSettings01" type="System.String">
    <value>Управление параметрами поставщиков</value>
  </data>
  <data name="ManagingProviderSettings02" type="System.String">
    <value>Инструмент администрирования веб-сайтов можно использовать для изменения и проверки поставщиков для веб-сайта. Для собственных функций приложение может использовать одного или разных поставщиков. </value>
  </data>
  <data name="ManagingProviderSettings03" type="System.String">
    <value>По умолчанию в средстве администрирования веб-сайтов для всех возможностей приложения используется поставщик &lt;span class=LanguageKeyword&gt;AspNetSqlProvider&lt;/span&gt;. </value>
  </data>
  <data name="ManagingProviderSettings04" type="System.String">
    <value>При управлении поставщиками веб-узла с помощью Web Site Administration Tool выполните следующее:</value>
  </data>
  <data name="ManagingProviderSettings05" type="System.String">
    <value>Измените стандартного поставщика &lt;span class=LanguageKeyword&gt;AspNetSqlRoleProvider&lt;/span&gt; на поставщика &lt;span class=LanguageKeyword&gt;AspNetWindowsTokenRoleProvider&lt;/span&gt;, если предпочитаете использовать локальные группы Windows для авторизации ролей.</value>
  </data>
  <data name="ManagingProviderSettings06" type="System.String">
    <value>Укажите, нужно ли использовать одного поставщика для всех функций приложения или различных поставщиков для каждой функции. Обычно отдельные поставщики применяются, только когда нужен точный контроль за местом хранения информации, или когда отдельный поставщик используется только для одной функции, например, ролей.</value>
  </data>
  <data name="SelectingaSingleProvidervs.DifferentProviders01" type="System.String">
    <value>Выбор между одним или несколькими поставщиками</value>
  </data>
  <data name="SelectingaSingleProvidervs.DifferentProviders02" type="System.String">
    <value>Веб-сайт может использовать одного поставщика для всех функций приложения. В этом случае все данные о членстве, ролях и т. п. хранятся в одном хранилище данных (обычно в одной базе данных). Тем не менее, вы можете выбрать различных поставщиков для каждой функции приложения. </value>
  </data>
  <data name="SelectingaSingleProvidervs.DifferentProviders03" type="System.String">
    <value>Откройте вкладку &lt;span class=UI&gt;Поставщик&lt;/span&gt; средства Web Site Administration Tool. Сначала надо указать должен ли узел использовать одного поставщика для всех функций или отдельных поставщиков для каждой функции приложения. Для этого сделайте следующее:</value>
  </data>
  <data name="SelectingaSingleProvidervs.DifferentProviders04" type="System.String">
    <value>Чтобы указать одного поставщика для всех функций приложения, щелкните &lt;span class=UI&gt;Выбор одного поставщика для всех данных по управлению веб-узлом&lt;/span&gt;.</value>
  </data>
  <data name="SelectingaSingleProvidervs.DifferentProviders05" type="System.String">
    <value>Чтобы указать поставщиков для отдельных функций приложения, щелкните &lt;span class=UI&gt;Выбор поставщика для каждой функции (расширенный)&lt;/span&gt; и выберите поставщика для каждой функции приложения.</value>
  </data>
  <data name="ConfiguringtheSQLServerProvider01" type="System.String">
    <value>Настройка поставщика SQL Server</value>
  </data>
  <data name="ConfiguringtheSQLServerProvider02" type="System.String">
    <value>Чтобы использовать поставщика SQL Server для хранения данных приложения в базе данных SQL Server, необходимо сначала настроить SQL Server, создав соответствующую базу данных. В состав ASP.NET входит программа командной строки aspnet_regsql.exe, которая служит для выполнения этой задачи.</value>
  </data>
  <data name="ConfiguringtheSQLServerProvider03" type="System.String">
    <value>Программа aspnet_regsql.exe находится в папке WINDOWS\Microsoft.NET\Framework\versionNumber веб-сервера. Программа aspnet_regsql.exe предназначена для создания базы данных SQL Server и добавления или удаления параметров из существующей базы данных.</value>
  </data>
  <data name="ConfiguringtheSQLServerProvider04" type="System.String">
    <value>Программу aspnet_regsql.exe можно запустить без параметров, чтобы запустить специальный мастер, упрощающий соединение с SQL Server и установку или удаление элементов базы данных, отвечающих за все поддерживаемые функции. Кроме того, программу aspnet_regsql.exe можно запустить как утилиту программной строки для настройки элементов базы данных, отвечающих за отдельные функции.</value>
  </data>
  <data name="ConfiguringtheSQLServerProvider05" type="System.String">
    <value>Для работы с мастером запустите aspnet_regsql.exe без параметров, как показано ниже.</value>
  </data>
  <data name="ConfiguringtheSQLServerProvider06" type="System.String">
    <value>Чтобы познакомиться с дополнительными параметрами, запустите программу aspnet_regsql.exe с параметром /?.</value>
  </data>
  <data name="BehindtheScenes01" type="System.String">
    <value>За кулисами</value>
  </data>
  <data name="BehindtheScenes02" type="System.String">
    <value>Вкладка &lt;span class=UI&gt;Поставщик&lt;/span&gt; управляет параметрами конфигурации, хранящимися в файле web.config для приложения. Особенно это касается параметров, управляемых с помощью вкладки &lt;span class=UI&gt;Поставщик&lt;/span&gt;, которые существуют в разделах &amp;lt;membership&amp;gt; и &amp;lt;roleManager&amp;gt; вашего файла конфигурации. </value>
  </data>
  <data name="BehindtheScenes03" type="System.String">
    <value>Ниже представлен фрагмент файла Web.config, созданного средством Web Site Administration Tool, после того как пользователь указал, что поставщик &lt;span class=LanguageKeyword&gt;AspNetWindowsTokenRoleProvider&lt;/span&gt; используется для управления ролями.</value>
  </data>
  <data name="MoreInformation01" type="System.String">
    <value>Подробнее</value>
  </data>
  <data name="MoreInformation02" type="System.String">
    <value>Дополнительные сведения см. в справочнике классов .NET Framework и схеме параметров ASP.NET Settings Schema:</value>
  </data>
  <data name="MoreInformation03" type="System.String">
    <value>membership Element (ASP.NET Settings Schema)</value>
  </data>
  <data name="MoreInformation04" type="System.String">
    <value>profile Element (ASP.NET Settings Schema)</value>
  </data>
  <data name="MoreInformation05" type="System.String">
    <value>roleManager Element (ASP.NET Settings Schema)</value>
  </data>
  <data name="SeeAlso01" type="System.String">
    <value>См. также</value>
  </data>
  <data name="SeeAlso02" type="System.String">
    <value>Обзор Web Site Administration Tool</value>
  </data>
  <data name="SeeAlso03" type="System.String">
    <value>Вкладка "Безопасность" Web Site Administration Tool</value>
  </data>
  <data name="SeeAlso04" type="System.String">
    <value>Вкладка "Приложение" Web Site Administration Tool</value>
  </data>
  <data name="SeeAlso05" type="System.String">
    <value>Внутренние компоненты Web Site Administration Tool</value>
  </data>
</root>
